
var eio = require('..');
var eioc = require('engine.io-client');
var expect = require('expect.js');
var http = require('http');
require('s').extend();

var server = http.createServer();
server.listen();

var engine = eio.attach(server, {
  allowUpgrades: true,
  transports: ['polling', 'websocket'],
  pingInterval: 4000,
  pingTimeout: 8000
});
// disable websocket support
server.removeAllListeners('upgrade');

var port = server.address().port;
engine.on('connection', function (conn) {
  setTimeout(function() {
    conn.send('success');
  }, 1000);
});

var socket = new eioc.Socket('ws://localhost:' + port);
socket.on('error', function(e) {
  console.log('error', e.stack);
  // fails before the fix
  if (e.description) expect(e.description).to.not.be(400);
});
socket.on('open', function () {
  // make sure we get the message after the fix
  socket.on('message', function (msg) {
    expect(msg).to.be('success');
    done();
  });
  // squid, or nginx proxies remove Upgrade: websocket, Connection: Upgrade headers,
  // transforming the ws request into http GET request.
  // this emulates that bad behavior
  var fakeProxyUrl = 'http://localhost:%d/engine.io/?EIO=2&transport=websocket&sid=%s'
    .s(port, socket.id);
  http.get(fakeProxyUrl);
});
